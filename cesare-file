% Studenti
studente(aa..hh, 1).
studente(hi..pp, 2).
studente(pq..zz, 3).

frequentazioni (Studente, Corso, Anno)


% Docenti, Corsi, Semestre, CFU (# slot)
insegnamento(  
    pozzato, algoritmi, 2, 9; 
    viola, analisi, 2, 9;
    gaeta, architettura, 2, 9;
    pensa, db, 2, 9;
    grosso, cmro, 1, 6;
    pironti, economia, 2, 9;
    dambrosio, statistica, 1, 6;
    migliore, fisica, 1, 6;
    sacco, ium, 2, 6;
    griffin, inglese, 1, 3;
    cardone, lpp, 2, 6;
    zacchi, lft, 1, 9;
    ronchi, logica, 1, 6;
    roggero, mdl, 1, 12;
    deliguoro, mfi, 2, 6;
    cardone, progI, 1, 9;
    baldoni, progII, 2, 9;
    ardissono, progIII, 2, 6;
    sereno, reti, 1, 6;
    ardissono, sWeb, 1, 6;
    bergadano, sicurezza, 2, 6;
    micalizio, sisInf, 1, 6;
    baroglio, sisInt, 2, 6;
    gunetti, so, 1, 12;
    cardone, storia, 1, 6;
    baldoni, sas, 2, 9;
    ardissono, tWeb, 1, 6
    ).

% Aule
aula(a..f)

% Giorno e Orario
giorno(lun; mar; mer; giov; ven).
orario(9, 11; 11, 13; 14, 16; 16, 18).

% Slot aule
1 { slot(Giorno, Aula, Inizio, Fine, Corso, Semestre, Docente) :  insegnamento(Docente, Corso, Semestre, _) } 1 :- 
    orario(Inizio, Fine), giorno(Giorno), aula(Aula, _).

% Associazione slot per corso corretta
conteggio_slot(Corso, Conteggio) :- Conteggio = #count{ Giorno, Inizio, Fine : slot(Giorno, _, Inizio, Fine, Corso, _, _) },  
    slot(_, _, _, _, Corso, _, _).
slot_CFU_corretti :- conteggioSlot(Corso, Conteggio), insegnamento(_, Corso, _, Conteggio).
:- not slot_CFU_corretti.


% Nella stessa aula, nello stesso momento, non vi possa essere piu' di un docente
:- slot(Giorno1, Aula1, Inizio1, Fine1, _, Semestre1, Docente1), slot(Giorno2, Aula2, Inizio2, Fine2, _, Semestre2, Docente2), 
    Giorno1 == Giorno2, 
    Aula1 == Aula2,
    Inizio1 == Inizio2, 
    Fine1 == Fine2,
    Semestre1 == Semestre2,
    Docente1 != Docente2.


% Un docente non puo' essere, nello stesso momento, in piu' aule diverse
:- slot(Giorno1, Aula1, Inizio1, Fine1, _, Semestre1, Docente1), slot(Giorno2, Aula2, Inizio2, Fine2, _, Semestre2, Docente2), 
    Giorno1 == Giorno2, 
    Inizio1 == Inizio2, 
    Fine1 == Fine2,
    Semestre1 == Semestre2,
    Docente1 == Docente2,
    Aula1 != Aula2.
    

% Non possono esserci piu' corsi per la stessa aula
:- slot(Giorno1, Aula1, Inizio1, Fine1, Corso1, Semestre1, Docente1), slot(Giorno2, Aula2, Inizio2, Fine2, Corso2, Semestre2, Docente2), 
    Giorno1 == Giorno2, 
    Inizio1 == Inizio2, 
    Fine1 == Fine2,
    Semestre1 == Semestre2,
    Docente1 == Docente2,
    Aula1 == Aula2,
    Corso1 != Corso2.


% Divisione slot per semestri
:- slot(Giorno1, Aula1, Inizio1, Fine1, _, Semestre1, _), slot(Giorno2, Aula2, Inizio2, Fine2, _, Semestre2, _),
    Giorno1 == Giorno2, 
    Aula1 == Aula2, 
    Inizio1 == Inizio2, 
    Fine1 == Fine2,
    Semestre1 == Semestre2.